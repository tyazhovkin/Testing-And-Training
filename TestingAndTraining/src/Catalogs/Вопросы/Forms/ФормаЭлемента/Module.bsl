#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Иллюстрация = ТекущийОбъект.Иллюстрация.Получить();
	Если Иллюстрация <> Неопределено Тогда
		АдресИллюстрации = ПоместитьВоВременноеХранилище(Иллюстрация, УникальныйИдентификатор);
		ИллюстрацияЗадана = Истина;
	КонецЕсли;
	ЗагрузитьОтветы();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ПроверитьОтветы(Отказ);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ИллюстрацияЗадана И ЭтоАдресВременногоХранилища(АдресИллюстрации) Тогда
		ТекущийОбъект.Иллюстрация = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресИллюстрации));
		ТекущийОбъект.ЕстьИллюстрация = Истина;
	Иначе
		ТекущийОбъект.Иллюстрация = Новый ХранилищеЗначения(Неопределено);
		ТекущийОбъект.ЕстьИллюстрация = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СформироватьОтветы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИллюстрацияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ИллюстрацияНажатиеЗавершение", ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОписаниеОповещения, ПараметрыЗагрузки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтветы

&НаКлиенте
Процедура ОтветыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФормуОтвета(ПараметрыПередачиОтвета(ВыбраннаяСтрока));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьИллюстрацию(Команда)
	АдресИллюстрации = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПользовательБезФотографии,
		УникальныйИдентификатор);
	ИллюстрацияЗадана = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОтвет(Команда)
//	Если Параметры.Ключ.Пустая() Тогда
//		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗаписиВопросаЗавершение", ЭтотОбъект);
//		ТекстВопроса = "Данные еще не записаны.
//					   |Добавление ответа возможно только после записи данных.
//					   |Данные будут записаны.";
//		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
//	Иначе
	ПараметрыПередачиОтвета = Новый Структура;
	ПараметрыПередачиОтвета.Вставить("СледующийПорядковыйНомер", СледующийПорядковыйНомер()); 
	ОткрытьФормуОтвета(ПараметрыПередачиОтвета);
//	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьНедействительные(Команда)
	Элементы.ОтветыОтображатьНедействительные.Пометка = Не ОтобразитьНедействительные;
	ОтобразитьНедействительные = Не ОтобразитьНедействительные;
	Если ОтобразитьНедействительные Тогда
		Элементы.ОтветыОтображатьНедействительные.Картинка = БиблиотекаКартинок.ВводимыеСимволыВидны;
		Элементы.Ответы.ОтборСтрок = Неопределено;
	Иначе
		Элементы.ОтветыОтображатьНедействительные.Картинка = БиблиотекаКартинок.ВводимыеСимволыСкрыты;
		Элементы.Ответы.ОтборСтрок = Новый ФиксированнаяСтруктура("Недействителен", Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПараметрыПередачиОтвета(ВыбраннаяСтрока)
	ТекущиеДанные = Ответы.Получить(ВыбраннаяСтрока);
	ПараметрыПередачи = Новый Структура;
	ДанныеОтвета = Новый Структура;
	ПараметрыПередачи.Вставить("ДанныеОтвета", ДанныеОтвета);
	ДанныеОтвета.Вставить("ПорядковыйНомер", ТекущиеДанные.ПорядковыйНомер);
	ДанныеОтвета.Вставить("Наименование", ТекущиеДанные.Наименование);
	ДанныеОтвета.Вставить("Ответ", ТекущиеДанные.Ответ);
	ДанныеОтвета.Вставить("Правильный", ТекущиеДанные.Правильный);
	ДанныеОтвета.Вставить("Недействителен", ТекущиеДанные.Недействителен);
	ДанныеОтвета.Вставить("Ссылка", ТекущиеДанные.Ссылка);
	ДанныеОтвета.Вставить("ВыбраннаяСтрока", ВыбраннаяСтрока);
	Возврат ПараметрыПередачи;
КонецФункции

&НаКлиенте
Функция СледующийПорядковыйНомер()
	Результат = 0;
	Для Каждого Строка Из Ответы Цикл
		Результат = Макс(Результат, Строка.ПорядковыйНомер);
	КонецЦикла;
	Возврат Результат + 1;
КонецФункции

&НаКлиенте
Процедура ИллюстрацияНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоАдресВременногоХранилища(АдресИллюстрации) Тогда
		УдалитьИзВременногоХранилища(АдресИллюстрации);
	КонецЕсли;

	АдресИллюстрации = Результат.Хранение;
	Модифицированность = Истина;
	ИллюстрацияЗадана = Истина;
КонецПроцедуры

//&НаКлиенте
//Процедура ПослеЗаписиВопросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
//	Если Результат = КодВозвратаДиалога.ОК Тогда
//		ЭлементЗаписан = Записать();
//		Если ЭлементЗаписан Тогда
//			ОткрытьФормуОтвета();
//		КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтвета(ПараметрыПередачи = Неопределено)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗаписиОтветаЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.Вопросы.Форма.ФормаОтвета", ПараметрыПередачи, Элементы.Ответы, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиОтветаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(Результат.Ссылка) Тогда
			НоваяСтрока = Ответы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
		Иначе
			ТекущаяСтрока = Ответы.Получить(Результат.ВыбраннаяСтрока);
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Результат);
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПроверитьОтветы(Отказ)
	КоличествоПравильных = 0;
	МножественныеОтветы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Тест, "МножественныеОтветы");
	Для Каждого Строка Из Ответы Цикл
		Если Строка.Правильный И Не Строка.Недействителен Тогда
			КоличествоПравильных = КоличествоПравильных + 1;
		КонецЕсли;
	КонецЦикла;
	Если КоличествоПравильных = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Нет правильных ответов", , , , Отказ);
	КонецЕсли;
	Если Не МножественныеОтветы И КоличествоПравильных > 1 Тогда
		ОбщегоНазначения.СообщитьПользователю("Правильный ответ может быть только один", , , , Отказ);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьОтветы()
	Для Каждого Строка Из Ответы Цикл
		Если Строка.ЕстьИзменения Тогда
			Если Не ЗначениеЗаполнено(Строка.Ссылка) Тогда
				НовыйЭлемент = Справочники.Ответы.СоздатьЭлемент();
				НовыйЭлемент.Владелец = Объект.Ссылка;
			Иначе
				НовыйЭлемент = Строка.Ссылка.ПолучитьОбъект();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(НовыйЭлемент, Строка);
			Попытка
				НовыйЭлемент.Записать();
				Строка.Ссылка = НовыйЭлемент.Ссылка;
				Строка.ЕстьИзменения = Ложь;
			Исключение
				ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
				Продолжить;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОтветы()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ответы.ПорядковыйНомер,
	|	Ответы.Наименование,
	|	Ответы.Ответ,
	|	Ответы.Правильный,
	|	Ответы.Ссылка,
	|	Ответы.Недействителен
	|ИЗ
	|	Справочник.Ответы КАК Ответы
	|ГДЕ
	|	Ответы.Владелец = &Владелец
	|	И Ответы.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядковыйНомер";

	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	Ответы.Загрузить(РезультатЗапроса.Выгрузить());
	Элементы.Ответы.ОтборСтрок = Новый ФиксированнаяСтруктура("Недействителен", Ложь);
	Элементы.ОтветыОтображатьНедействительные.Пометка = Ложь;
	Элементы.ОтветыОтображатьНедействительные.Картинка = БиблиотекаКартинок.ВводимыеСимволыСкрыты;
КонецПроцедуры

#КонецОбласти